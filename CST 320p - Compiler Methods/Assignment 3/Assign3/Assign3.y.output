Grammar

    0 $accept: program $end

    1 program: PROGRAM

    2 PROGRAM: START END
    3        | START EXPRS END
    4        | START var_decls END
    5        | START var_decls EXPRS END
    6        | START EXPRS var_decls END

    7 var_decls: var_decl
    8          | var_decls var_decl

    9 var_decl: VAR ID COLON TYPE SEMI

   10 EXPRS: exp
   11      | EXPRS exp

   12 exp: simple_exp SEMI
   13    | assign_statement
   14    | IF simple_exp THEN exp ELSE exp

   15 actual_param_list: actual_param
   16                  | actual_param_list COMMA actual_param

   17 actual_param: simple_exp

   18 assign_statement: ID ASSIGN_OP exp

   19 simple_exp: LPAREN simple_exp RPAREN
   20           | simple_exp PLUS_OP simple_exp
   21           | simple_exp MINUS_OP simple_exp
   22           | simple_exp MULT_OP simple_exp
   23           | simple_exp DIVIDE_OP simple_exp
   24           | simple_exp MODULO_OP simple_exp
   25           | PRINT LPAREN actual_param_list RPAREN
   26           | READ LPAREN RPAREN
   27           | ID
   28           | NUMBER
   29           | CONDITION

   30 CONDITION: LPAREN ID ASSIGN_OP NUMBER RPAREN

   31 TYPE: INTEGER


Terminals, with rules where they appear

$end (0) 0
error (256)
START (258) 2 3 4 5 6
END (259) 2 3 4 5 6
VAR (260) 9
PRINT (261) 25
READ (262) 26
IF (263) 14
THEN (264) 14
ELSE (265) 14
INTEGER (266) 31
ASSIGN_OP (267) 18 30
RPAREN (268) 19 25 26 30
LPAREN (269) 19 25 26 30
MINUS_OP (270) 21
PLUS_OP (271) 20
MODULO_OP (272) 24
DIVIDE_OP (273) 23
MULT_OP (274) 22
COLON (275) 9
SEMI (276) 9 12
COMMA (277) 16
ID (278) 9 18 27 30
NUMBER (279) 28 30


Nonterminals, with rules where they appear

$accept (25)
    on left: 0
program (26)
    on left: 1, on right: 0
PROGRAM (27)
    on left: 2 3 4 5 6, on right: 1
var_decls (28)
    on left: 7 8, on right: 4 5 6 8
var_decl (29)
    on left: 9, on right: 7 8
EXPRS (30)
    on left: 10 11, on right: 3 5 6 11
exp (31)
    on left: 12 13 14, on right: 10 11 14 18
actual_param_list (32)
    on left: 15 16, on right: 16 25
actual_param (33)
    on left: 17, on right: 15 16
assign_statement (34)
    on left: 18, on right: 13
simple_exp (35)
    on left: 19 20 21 22 23 24 25 26 27 28 29, on right: 12 14 17 19
    20 21 22 23 24
CONDITION (36)
    on left: 30, on right: 29
TYPE (37)
    on left: 31, on right: 9


state 0

    0 $accept: . program $end

    START  shift, and go to state 1

    program  go to state 2
    PROGRAM  go to state 3


state 1

    2 PROGRAM: START . END
    3        | START . EXPRS END
    4        | START . var_decls END
    5        | START . var_decls EXPRS END
    6        | START . EXPRS var_decls END

    END     shift, and go to state 4
    VAR     shift, and go to state 5
    PRINT   shift, and go to state 6
    READ    shift, and go to state 7
    IF      shift, and go to state 8
    LPAREN  shift, and go to state 9
    ID      shift, and go to state 10
    NUMBER  shift, and go to state 11

    var_decls         go to state 12
    var_decl          go to state 13
    EXPRS             go to state 14
    exp               go to state 15
    assign_statement  go to state 16
    simple_exp        go to state 17
    CONDITION         go to state 18


state 2

    0 $accept: program . $end

    $end  shift, and go to state 19


state 3

    1 program: PROGRAM .

    $default  reduce using rule 1 (program)


state 4

    2 PROGRAM: START END .

    $default  reduce using rule 2 (PROGRAM)


state 5

    9 var_decl: VAR . ID COLON TYPE SEMI

    ID  shift, and go to state 20


state 6

   25 simple_exp: PRINT . LPAREN actual_param_list RPAREN

    LPAREN  shift, and go to state 21


state 7

   26 simple_exp: READ . LPAREN RPAREN

    LPAREN  shift, and go to state 22


state 8

   14 exp: IF . simple_exp THEN exp ELSE exp

    PRINT   shift, and go to state 6
    READ    shift, and go to state 7
    LPAREN  shift, and go to state 9
    ID      shift, and go to state 23
    NUMBER  shift, and go to state 11

    simple_exp  go to state 24
    CONDITION   go to state 18


state 9

   19 simple_exp: LPAREN . simple_exp RPAREN
   30 CONDITION: LPAREN . ID ASSIGN_OP NUMBER RPAREN

    PRINT   shift, and go to state 6
    READ    shift, and go to state 7
    LPAREN  shift, and go to state 9
    ID      shift, and go to state 25
    NUMBER  shift, and go to state 11

    simple_exp  go to state 26
    CONDITION   go to state 18


state 10

   18 assign_statement: ID . ASSIGN_OP exp
   27 simple_exp: ID .

    ASSIGN_OP  shift, and go to state 27

    $default  reduce using rule 27 (simple_exp)


state 11

   28 simple_exp: NUMBER .

    $default  reduce using rule 28 (simple_exp)


state 12

    4 PROGRAM: START var_decls . END
    5        | START var_decls . EXPRS END
    8 var_decls: var_decls . var_decl

    END     shift, and go to state 28
    VAR     shift, and go to state 5
    PRINT   shift, and go to state 6
    READ    shift, and go to state 7
    IF      shift, and go to state 8
    LPAREN  shift, and go to state 9
    ID      shift, and go to state 10
    NUMBER  shift, and go to state 11

    var_decl          go to state 29
    EXPRS             go to state 30
    exp               go to state 15
    assign_statement  go to state 16
    simple_exp        go to state 17
    CONDITION         go to state 18


state 13

    7 var_decls: var_decl .

    $default  reduce using rule 7 (var_decls)


state 14

    3 PROGRAM: START EXPRS . END
    6        | START EXPRS . var_decls END
   11 EXPRS: EXPRS . exp

    END     shift, and go to state 31
    VAR     shift, and go to state 5
    PRINT   shift, and go to state 6
    READ    shift, and go to state 7
    IF      shift, and go to state 8
    LPAREN  shift, and go to state 9
    ID      shift, and go to state 10
    NUMBER  shift, and go to state 11

    var_decls         go to state 32
    var_decl          go to state 13
    exp               go to state 33
    assign_statement  go to state 16
    simple_exp        go to state 17
    CONDITION         go to state 18


state 15

   10 EXPRS: exp .

    $default  reduce using rule 10 (EXPRS)


state 16

   13 exp: assign_statement .

    $default  reduce using rule 13 (exp)


state 17

   12 exp: simple_exp . SEMI
   20 simple_exp: simple_exp . PLUS_OP simple_exp
   21           | simple_exp . MINUS_OP simple_exp
   22           | simple_exp . MULT_OP simple_exp
   23           | simple_exp . DIVIDE_OP simple_exp
   24           | simple_exp . MODULO_OP simple_exp

    MINUS_OP   shift, and go to state 34
    PLUS_OP    shift, and go to state 35
    MODULO_OP  shift, and go to state 36
    DIVIDE_OP  shift, and go to state 37
    MULT_OP    shift, and go to state 38
    SEMI       shift, and go to state 39


state 18

   29 simple_exp: CONDITION .

    $default  reduce using rule 29 (simple_exp)


state 19

    0 $accept: program $end .

    $default  accept


state 20

    9 var_decl: VAR ID . COLON TYPE SEMI

    COLON  shift, and go to state 40


state 21

   25 simple_exp: PRINT LPAREN . actual_param_list RPAREN

    PRINT   shift, and go to state 6
    READ    shift, and go to state 7
    LPAREN  shift, and go to state 9
    ID      shift, and go to state 23
    NUMBER  shift, and go to state 11

    actual_param_list  go to state 41
    actual_param       go to state 42
    simple_exp         go to state 43
    CONDITION          go to state 18


state 22

   26 simple_exp: READ LPAREN . RPAREN

    RPAREN  shift, and go to state 44


state 23

   27 simple_exp: ID .

    $default  reduce using rule 27 (simple_exp)


state 24

   14 exp: IF simple_exp . THEN exp ELSE exp
   20 simple_exp: simple_exp . PLUS_OP simple_exp
   21           | simple_exp . MINUS_OP simple_exp
   22           | simple_exp . MULT_OP simple_exp
   23           | simple_exp . DIVIDE_OP simple_exp
   24           | simple_exp . MODULO_OP simple_exp

    THEN       shift, and go to state 45
    MINUS_OP   shift, and go to state 34
    PLUS_OP    shift, and go to state 35
    MODULO_OP  shift, and go to state 36
    DIVIDE_OP  shift, and go to state 37
    MULT_OP    shift, and go to state 38


state 25

   27 simple_exp: ID .
   30 CONDITION: LPAREN ID . ASSIGN_OP NUMBER RPAREN

    ASSIGN_OP  shift, and go to state 46

    $default  reduce using rule 27 (simple_exp)


state 26

   19 simple_exp: LPAREN simple_exp . RPAREN
   20           | simple_exp . PLUS_OP simple_exp
   21           | simple_exp . MINUS_OP simple_exp
   22           | simple_exp . MULT_OP simple_exp
   23           | simple_exp . DIVIDE_OP simple_exp
   24           | simple_exp . MODULO_OP simple_exp

    RPAREN     shift, and go to state 47
    MINUS_OP   shift, and go to state 34
    PLUS_OP    shift, and go to state 35
    MODULO_OP  shift, and go to state 36
    DIVIDE_OP  shift, and go to state 37
    MULT_OP    shift, and go to state 38


state 27

   18 assign_statement: ID ASSIGN_OP . exp

    PRINT   shift, and go to state 6
    READ    shift, and go to state 7
    IF      shift, and go to state 8
    LPAREN  shift, and go to state 9
    ID      shift, and go to state 10
    NUMBER  shift, and go to state 11

    exp               go to state 48
    assign_statement  go to state 16
    simple_exp        go to state 17
    CONDITION         go to state 18


state 28

    4 PROGRAM: START var_decls END .

    $default  reduce using rule 4 (PROGRAM)


state 29

    8 var_decls: var_decls var_decl .

    $default  reduce using rule 8 (var_decls)


state 30

    5 PROGRAM: START var_decls EXPRS . END
   11 EXPRS: EXPRS . exp

    END     shift, and go to state 49
    PRINT   shift, and go to state 6
    READ    shift, and go to state 7
    IF      shift, and go to state 8
    LPAREN  shift, and go to state 9
    ID      shift, and go to state 10
    NUMBER  shift, and go to state 11

    exp               go to state 33
    assign_statement  go to state 16
    simple_exp        go to state 17
    CONDITION         go to state 18


state 31

    3 PROGRAM: START EXPRS END .

    $default  reduce using rule 3 (PROGRAM)


state 32

    6 PROGRAM: START EXPRS var_decls . END
    8 var_decls: var_decls . var_decl

    END  shift, and go to state 50
    VAR  shift, and go to state 5

    var_decl  go to state 29


state 33

   11 EXPRS: EXPRS exp .

    $default  reduce using rule 11 (EXPRS)


state 34

   21 simple_exp: simple_exp MINUS_OP . simple_exp

    PRINT   shift, and go to state 6
    READ    shift, and go to state 7
    LPAREN  shift, and go to state 9
    ID      shift, and go to state 23
    NUMBER  shift, and go to state 11

    simple_exp  go to state 51
    CONDITION   go to state 18


state 35

   20 simple_exp: simple_exp PLUS_OP . simple_exp

    PRINT   shift, and go to state 6
    READ    shift, and go to state 7
    LPAREN  shift, and go to state 9
    ID      shift, and go to state 23
    NUMBER  shift, and go to state 11

    simple_exp  go to state 52
    CONDITION   go to state 18


state 36

   24 simple_exp: simple_exp MODULO_OP . simple_exp

    PRINT   shift, and go to state 6
    READ    shift, and go to state 7
    LPAREN  shift, and go to state 9
    ID      shift, and go to state 23
    NUMBER  shift, and go to state 11

    simple_exp  go to state 53
    CONDITION   go to state 18


state 37

   23 simple_exp: simple_exp DIVIDE_OP . simple_exp

    PRINT   shift, and go to state 6
    READ    shift, and go to state 7
    LPAREN  shift, and go to state 9
    ID      shift, and go to state 23
    NUMBER  shift, and go to state 11

    simple_exp  go to state 54
    CONDITION   go to state 18


state 38

   22 simple_exp: simple_exp MULT_OP . simple_exp

    PRINT   shift, and go to state 6
    READ    shift, and go to state 7
    LPAREN  shift, and go to state 9
    ID      shift, and go to state 23
    NUMBER  shift, and go to state 11

    simple_exp  go to state 55
    CONDITION   go to state 18


state 39

   12 exp: simple_exp SEMI .

    $default  reduce using rule 12 (exp)


state 40

    9 var_decl: VAR ID COLON . TYPE SEMI

    INTEGER  shift, and go to state 56

    TYPE  go to state 57


state 41

   16 actual_param_list: actual_param_list . COMMA actual_param
   25 simple_exp: PRINT LPAREN actual_param_list . RPAREN

    RPAREN  shift, and go to state 58
    COMMA   shift, and go to state 59


state 42

   15 actual_param_list: actual_param .

    $default  reduce using rule 15 (actual_param_list)


state 43

   17 actual_param: simple_exp .
   20 simple_exp: simple_exp . PLUS_OP simple_exp
   21           | simple_exp . MINUS_OP simple_exp
   22           | simple_exp . MULT_OP simple_exp
   23           | simple_exp . DIVIDE_OP simple_exp
   24           | simple_exp . MODULO_OP simple_exp

    MINUS_OP   shift, and go to state 34
    PLUS_OP    shift, and go to state 35
    MODULO_OP  shift, and go to state 36
    DIVIDE_OP  shift, and go to state 37
    MULT_OP    shift, and go to state 38

    $default  reduce using rule 17 (actual_param)


state 44

   26 simple_exp: READ LPAREN RPAREN .

    $default  reduce using rule 26 (simple_exp)


state 45

   14 exp: IF simple_exp THEN . exp ELSE exp

    PRINT   shift, and go to state 6
    READ    shift, and go to state 7
    IF      shift, and go to state 8
    LPAREN  shift, and go to state 9
    ID      shift, and go to state 10
    NUMBER  shift, and go to state 11

    exp               go to state 60
    assign_statement  go to state 16
    simple_exp        go to state 17
    CONDITION         go to state 18


state 46

   30 CONDITION: LPAREN ID ASSIGN_OP . NUMBER RPAREN

    NUMBER  shift, and go to state 61


state 47

   19 simple_exp: LPAREN simple_exp RPAREN .

    $default  reduce using rule 19 (simple_exp)


state 48

   18 assign_statement: ID ASSIGN_OP exp .

    $default  reduce using rule 18 (assign_statement)


state 49

    5 PROGRAM: START var_decls EXPRS END .

    $default  reduce using rule 5 (PROGRAM)


state 50

    6 PROGRAM: START EXPRS var_decls END .

    $default  reduce using rule 6 (PROGRAM)


state 51

   20 simple_exp: simple_exp . PLUS_OP simple_exp
   21           | simple_exp . MINUS_OP simple_exp
   21           | simple_exp MINUS_OP simple_exp .
   22           | simple_exp . MULT_OP simple_exp
   23           | simple_exp . DIVIDE_OP simple_exp
   24           | simple_exp . MODULO_OP simple_exp

    MODULO_OP  shift, and go to state 36
    DIVIDE_OP  shift, and go to state 37
    MULT_OP    shift, and go to state 38

    $default  reduce using rule 21 (simple_exp)


state 52

   20 simple_exp: simple_exp . PLUS_OP simple_exp
   20           | simple_exp PLUS_OP simple_exp .
   21           | simple_exp . MINUS_OP simple_exp
   22           | simple_exp . MULT_OP simple_exp
   23           | simple_exp . DIVIDE_OP simple_exp
   24           | simple_exp . MODULO_OP simple_exp

    MODULO_OP  shift, and go to state 36
    DIVIDE_OP  shift, and go to state 37
    MULT_OP    shift, and go to state 38

    $default  reduce using rule 20 (simple_exp)


state 53

   20 simple_exp: simple_exp . PLUS_OP simple_exp
   21           | simple_exp . MINUS_OP simple_exp
   22           | simple_exp . MULT_OP simple_exp
   23           | simple_exp . DIVIDE_OP simple_exp
   24           | simple_exp . MODULO_OP simple_exp
   24           | simple_exp MODULO_OP simple_exp .

    $default  reduce using rule 24 (simple_exp)


state 54

   20 simple_exp: simple_exp . PLUS_OP simple_exp
   21           | simple_exp . MINUS_OP simple_exp
   22           | simple_exp . MULT_OP simple_exp
   23           | simple_exp . DIVIDE_OP simple_exp
   23           | simple_exp DIVIDE_OP simple_exp .
   24           | simple_exp . MODULO_OP simple_exp

    $default  reduce using rule 23 (simple_exp)


state 55

   20 simple_exp: simple_exp . PLUS_OP simple_exp
   21           | simple_exp . MINUS_OP simple_exp
   22           | simple_exp . MULT_OP simple_exp
   22           | simple_exp MULT_OP simple_exp .
   23           | simple_exp . DIVIDE_OP simple_exp
   24           | simple_exp . MODULO_OP simple_exp

    $default  reduce using rule 22 (simple_exp)


state 56

   31 TYPE: INTEGER .

    $default  reduce using rule 31 (TYPE)


state 57

    9 var_decl: VAR ID COLON TYPE . SEMI

    SEMI  shift, and go to state 62


state 58

   25 simple_exp: PRINT LPAREN actual_param_list RPAREN .

    $default  reduce using rule 25 (simple_exp)


state 59

   16 actual_param_list: actual_param_list COMMA . actual_param

    PRINT   shift, and go to state 6
    READ    shift, and go to state 7
    LPAREN  shift, and go to state 9
    ID      shift, and go to state 23
    NUMBER  shift, and go to state 11

    actual_param  go to state 63
    simple_exp    go to state 43
    CONDITION     go to state 18


state 60

   14 exp: IF simple_exp THEN exp . ELSE exp

    ELSE  shift, and go to state 64


state 61

   30 CONDITION: LPAREN ID ASSIGN_OP NUMBER . RPAREN

    RPAREN  shift, and go to state 65


state 62

    9 var_decl: VAR ID COLON TYPE SEMI .

    $default  reduce using rule 9 (var_decl)


state 63

   16 actual_param_list: actual_param_list COMMA actual_param .

    $default  reduce using rule 16 (actual_param_list)


state 64

   14 exp: IF simple_exp THEN exp ELSE . exp

    PRINT   shift, and go to state 6
    READ    shift, and go to state 7
    IF      shift, and go to state 8
    LPAREN  shift, and go to state 9
    ID      shift, and go to state 10
    NUMBER  shift, and go to state 11

    exp               go to state 66
    assign_statement  go to state 16
    simple_exp        go to state 17
    CONDITION         go to state 18


state 65

   30 CONDITION: LPAREN ID ASSIGN_OP NUMBER RPAREN .

    $default  reduce using rule 30 (CONDITION)


state 66

   14 exp: IF simple_exp THEN exp ELSE exp .

    $default  reduce using rule 14 (exp)

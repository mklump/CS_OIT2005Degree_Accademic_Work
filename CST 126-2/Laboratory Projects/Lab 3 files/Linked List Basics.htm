<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0034)http://cslibrary.stanford.edu/103/ -->
<HTML><HEAD><TITLE>Linked List Basics</TITLE>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<META content="Nick Parlante" name=Author>
<META 
content="Stanford CS Education Library: a 26 page explanation of how linked lists work and how to write the code for them. Uses the C language. Includes examples and practice problems." 
name=Description>
<META content="MSHTML 6.00.2462.0" name=GENERATOR>
<META 
content="linked lists, linked list, insert, linked list, delete, reverse, linked list, recursive, iterative, list, introductionl, explanation, reference" 
name=KeyWords>
<META content="text/html; charset=iso-8859-1" name=Content-Type></HEAD>
<BODY text=#000000 vLink=#551a8b aLink=#0000ff link=#0000ff bgColor=#ffffff>
<H1>Linked List Basics</H1>Stanford CS Education Library: a 26 page&nbsp; 
introduction to linked lists in C/C++. Includes examples, drawings, and practice 
problems, and solution code. The more advanced article,&nbsp; <A 
href="http://cslibrary.stanford.edu/105/">Linked List Problems</A>, has 18 
sample problems with solutions. 
<P>This article introduces the basic structures and techniques for building 
linked lists with a mixture of explanations, drawings, sample code, and 
exercises. The material is useful if you want to understand linked lists or if 
you want to see a realistic, applied example of pointer-intensive code. Even if 
you never really need a linked list, they are an excellent way to learn pointers 
and pointer algorithms. 
<H3>Download <A 
href="http://cslibrary.stanford.edu/103/LinkedListBasics.pdf">LinkedListBasics.pdf</A></H3>(revised 
4/2001) 
<P>See also.. 
<UL>
  <LI>The silly <A href="http://cslibrary.stanford.edu/104/">Binky Pointer 
  Fun</A>&nbsp; video -- animated introduction to pointers 
  <LI><A href="http://cslibrary.stanford.edu/102/">Pointers and Memory</A> -- 
  basic concepts of pointers and memory 
  <LI><A href="http://cslibrary.stanford.edu/105/">Linked List Problems</A> -- 
  lots of linked list problems 
  <LI><A href="http://cslibrary.stanford.edu/110/">Binary Trees</A> -- all about 
  binary trees 
  <LI><A href="http://cslibrary.stanford.edu/109/">The Great Tree List Recursion 
  Problem</A> -- the greatest pointer/recursion problem ever (advanceed) 
</LI></UL>
<P><BR><A href="http://cslibrary.stanford.edu/help.html">Downloading help 
<HR>
</A>Up to the <A href="http://cslibrary.stanford.edu/">CS Education Library 
Home</A> </BODY></HTML>

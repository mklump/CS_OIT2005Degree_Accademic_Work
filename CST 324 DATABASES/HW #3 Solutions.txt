PROBLEM #2
	CREATE 	VIEW AC_2778V AS
	SELECT 	CHAR_DATE, AC_NUMBER, CHAR_DESTINATION, CHAR_DISTANCE, CHAR_HOURS_FLOWN
	FROM 	CHARTER
	WHERE 	AC_NUMBER='2778V';

PROBLEM #4
	SELECT	CHAR_DATE, AC_NUMBER, CHAR_DESTINATION, CUS_LNAME, CUS_AREACODE, cuS_PHONE
	FROM 	CHARTER, CUSTOMER
	WHERE 	(AC_NUMBER='2778v') AND
	CUSTOMER.CUS_CODE=CHARTER.CUS_CODE;

PROBLEM #5
	SELECT	CHAR_DATE, CHARTER.AC_NUMBER, MOD_NAME, EMP_LNAME
	FROM	CHARTER, EMPLOYEE, AIRCRAFT, MODEL
	WHERE	(CHARTER.AC_NUMBER='2778V') 		 AND
		(MODEL.MOD_CODE = AIRCRAFT.MOD_CODE) 	 AND
		(AIRCRAFT.AC_NUMBER = CHARTER.AC_NUMBER) AND
		(CHARTER.CUS_CODE = CUSTOMER.CUS_CODE);

PROBLEM #10
	FORMULAS FOR CALCULATING THE DATA:
		HOURS * RATE AS [TOTAL PAY]

	SELECT 	CHAR_DATE, CUS_LNAME, (CHAR_DISTANCE * MOD_CHG_MILE) AS [MILEAGE CHARGE],
			(CHAR_HOURS_WAIT * 50) AS [WAITING CHARGE],
			([MILEAGE CHARGE] + [WAITING CHARGE]) AS [TOTAL CHARGE]
	FROM 	CHARTER, CUSTOMER, MODEL, AIRCRAFT
	WHERE 	CHAR_DATE >= '1/20/02';

PROBLEM #11
	SELECT	CUS_LNAME, CUS_FNAME, CUS_INITIAL, CUS_BALANCE
	FROM	CUSTOMER
	WHERE	CUS_BALANCE > 0
	ORDER BY CUS_BALANCE DESC;

PROBLEM #12
	SELECT AVG(CUS_BALANCE) AS [AVERAGE BALANCE], MIN(CUS_BALANCE) AS [MINIMUM BALANCE],
		MAX(CUS_BALANCE) AS [MAXIMUM BALANCE], SUM(CUS_BALANCE) AS [TOTAL UNPAID BILLS]
	FROM CUSTOMER

PROBLEM #13
	SELECT AC_NUMBER, COUNT(*) AS [NUMBER OF TRIPS], // counting is arraged by the AC_NUMBER
		SUM(CHAR_DISTANCE) AS [TOTAL DISTANCE],
		AVG(CHAR_DISTANCE) AS [AVERAGE DISTANCE],
		SUM(CHAR_HOURS_FLOWN) AS [TOTAL HOURS],
		AVG(CHAR_HOURS_FLOWN) AS [AVERAGE HOURS]
	FROM CHARTER
	GROUP BY AC_NUMBER
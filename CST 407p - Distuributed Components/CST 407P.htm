<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>CST 126P</title>
</head>

<body>

<p><u><b><font face="Tahoma">CST 407 Winter 2003. Seminar course.
&quot;Distributed Components&quot;.</font></b></u></p>
<p><font face="Tahoma" size="4">Instructor name . Ramakrishna Saripalli.</font></p>
<p><font face="Tahoma" size="4">Course e-mail address :- <a href="mailto:rksaripa@capital.ous.edu">rksaripa@capital.ous.edu</a>.</font></p>
<p><font face="Tahoma" size="4">Course web page :- <a href="http://capital.ous.edu/~rksaripa/cst126psummer2002">http://capital.ous.edu/~rksaripa/cst407dcom</a></font></p>
<p><font face="Tahoma" size="4">Course book. Recommended. Component Software
Beyond Object oriented programming By Clemens Szyperski.</font></p>
<p><font face="Tahoma" size="4">Recommended book for DCOM. Inside Distributed
COM. By Guy Eddon and Henry Eddon. Microsoft Press.</font></p>
<p><font face="Tahoma" size="4">Course timings.</font></p>
<ul>
  <li><font face="Tahoma" size="4">Friday 6:00 - 9:50 pm OIT Walker Campus,
    Beaverton.</font></li>
</ul>
<p><font face="Tahoma" size="4"><b><u>Course objective</u></b>.</font></p>
<p><font face="Tahoma" size="5">Learn the principles and techniques involved in
designing , developing and deploying distributed components. The textbook will
be followed for theoretical content. There is a project in this course that will
involve bringing up a system of distributed devices and software to access them
across a distributed network.</font></p>
<p><font face="Tahoma" size="4"><b><u>Grading policy</u></b>.</font></p>
<ul>
  <li><font face="Tahoma" size="4">100 % of the grade is allocated to the final
    project.</font></li>
  <li><font face="Tahoma" size="4">The final project is due on the last day of
    the class (03/21/2003 Friday).</font></li>
</ul>
<p><font face="Tahoma" size="4">Final project readme.</font></p>
<ul>
  <li><font face="Tahoma" size="4">The class is divided into teams.</font></li>
  <li><font face="Tahoma" size="4">Each team has 3 students.</font></li>
  <li><font face="Tahoma" size="4">The team is collectively assigned a grade.</font></li>
  <li><font face="Tahoma" size="4">The team is responsible for the work assigned
    to it.</font></li>
</ul>
<p><font face="Tahoma" size="4">Final project deliverables.</font></p>
<ul>
  <li><font face="Tahoma" size="4">Each team MUST provide source code &amp;
    executables for all components involved.</font></li>
  <li><font face="Tahoma" size="4">Ideally, each team will provide batch files
    or script files that will set / install the components on one or machines.</font></li>
  <li><font face="Tahoma" size="4">It is the instructor's responsibility to get
    adequate permissions for the machines involved.</font></li>
  <li><font face="Tahoma" size="4">Each team MUST send in a zip file for their
    project work.</font></li>
  <li><font face="Tahoma" size="4">The project will be graded on the last day of
    the class in the class itself.s</font></li>
</ul>
<p><font face="Tahoma" size="4">Grading requirements.</font></p>
<ul>
  <li><font face="Tahoma" size="4">The grade for the class is based on the grade
    for the project.</font></li>
</ul>
<p>&nbsp;</p>
<p><font face="Tahoma" size="4"><b><u>Attendance policy</u></b>.</font></p>
<p><font face="Tahoma" size="4">All the students are advised to check with the
school regarding the official attendance policies. The instructor CANNOT and
WILL NOT provide assistance in this matter. Attendance in this class is optional
and at the discretion of the student, with the exception of the days when
quizzes are conducted.</font></p>
<p>&nbsp;&nbsp; <font face="Tahoma" size="4">&nbsp;&nbsp;&nbsp;&nbsp; <u><b>Computing
equipment.</b></u></font></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font face="Tahoma" size="4">&nbsp;&nbsp;&nbsp;&nbsp;
The lab assigned for this class has PCs with the appropriate compilers( VC++ 6.0
) for students to work with. Students MAY use their own computers for this
purpose. Students may use any Windows computer (Windows 2000(R), Windows NT SP
6, Windows XP ) equipped with a C++ compiler for their assignments and project.</font></p>
<p>&nbsp;</p>
<table border="3" width="100%" height="289">
  <tr>
    <td width="50%" height="19">Day</td>
    <td width="50%" height="19">Handout link</td>
  </tr>
  <tr>
    <td width="50%" height="1">&nbsp;01/24/2002 DCOM.
      <p>Presentation on DCOM. Code samples will be used to provide illustration
      on the usage of DCOM.</p>
    </td>
    <td width="50%" height="1"><a href="calcproj.zip">Calculator project zip
      file.</a>
      <p><a href="dcom_tut.ppt">Presentation for today(Powerpoint file)</a></p>
      <p><a href="cst407winter2003project.doc">Final project .doc file.</a></p>
    </td>
  </tr>
  <tr>
    <td width="50%" height="1">02/07/2002.
      <p>Discussion of the project and its scope including instructor
      deliverables.</p>
      <ul>
        <li>Instructor will deliver a client for testing and a full
          implementation for the broker interface. All of the code will be in
          binary and no source will be provided.</li>
        <li>Instructor will also provide a default device of type RAM that can
          be used by teams to test their own clients. Only binary executables
          will be provided for this type of device.</li>
      </ul>
    </td>
    <td width="50%" height="1"><a href="device_descr.doc">Device description
      file</a>.
      <p><a href="cst407winter2003project.doc">Updated project file</a>.</p>
      <p><a href="idl/cst407_modem.idl">CST 407 Modem IDL file</a></p>
      <p><a href="idl/cst407_ram.idl">CST 407 RAM IDL file</a>.</p>
      <p><a href="idl/cst407_broker.idl">CST 407 Broker IDL file</a>.</td>
  </tr>
  <tr>
    <td width="50%" height="1">02/14/2002.
      <ul>
        <li>Show code on how to write IDL files.</li>
        <li>How to integrate IDL files into the VC++ workspace.</li>
        <li>Writing components with 2 or more interfaces.</li>
        <li>Self-registering components. How do you write such a component?.</li>
        <li>Discussing class factories.</li>
        <li>Exposing required functions from a component in DLL format.
          <ul>
            <li>DllGetClassObject.</li>
            <li>DllRegisterServer.</li>
            <li>Other routines.</li>
          </ul>
        </li>
      </ul>
    </td>
    <td width="50%" height="1"><a href="prog1.zip">Sample calculator component
      (server in dll format) + self-registration code + registry files +
      component with 2 interfaces in it</a>.</td>
  </tr>
</table>

</body>

</html>

//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
// 
namespace AsyncClient.net.xmethods.services {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="net.xmethods.services.stockquote.StockQuoteBinding", Namespace="http://www.themindelectric.com/wsdl/net.xmethods.services.stockquote.StockQuote/")]
    public class netxmethodsservicesstockquoteStockQuoteService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public netxmethodsservicesstockquoteStockQuoteService() {
            this.Url = "http://64.124.140.30:9090/soap";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:xmethods-delayed-quotes#getQuote", RequestNamespace="urn:xmethods-delayed-quotes", ResponseNamespace="urn:xmethods-delayed-quotes")]
        [return: System.Xml.Serialization.SoapElementAttribute("Result")]
        public System.Single getQuote(string symbol) {
            object[] results = this.Invoke("getQuote", new object[] {
                        symbol});
            return ((System.Single)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetQuote(string symbol, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getQuote", new object[] {
                        symbol}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Single EndgetQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Single)(results[0]));
        }
    }
}

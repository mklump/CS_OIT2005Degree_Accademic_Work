//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace nGallerySQLConnectionTesting {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("nGalleryDataSet")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class nGalleryDataSet : System.Data.DataSet {
        
        private AllDataDataTable tableAllData;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public nGalleryDataSet() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected nGalleryDataSet(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["AllData"] != null)) {
                    base.Tables.Add(new AllDataDataTable(ds.Tables["AllData"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AllDataDataTable AllData {
            get {
                return this.tableAllData;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            nGalleryDataSet cln = ((nGalleryDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["AllData"] != null)) {
                    base.Tables.Add(new AllDataDataTable(ds.Tables["AllData"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableAllData = ((AllDataDataTable)(base.Tables["AllData"]));
            if ((initTable == true)) {
                if ((this.tableAllData != null)) {
                    this.tableAllData.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "nGalleryDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/nGalleryDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAllData = new AllDataDataTable();
            base.Tables.Add(this.tableAllData);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAllData() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            nGalleryDataSet ds = new nGalleryDataSet();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void AllDataRowChangeEventHandler(object sender, AllDataRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AllDataDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnAlbumID;
            
            private System.Data.DataColumn columnAlbumName;
            
            private System.Data.DataColumn columnAlbumDesc;
            
            private System.Data.DataColumn columnAlbumCreateDate;
            
            private System.Data.DataColumn columnParentAlbumID;
            
            private System.Data.DataColumn columnCommentID;
            
            private System.Data.DataColumn columnCommentFromName;
            
            private System.Data.DataColumn columnCommentFromEmailAddr;
            
            private System.Data.DataColumn columnCommentFromWebURL;
            
            private System.Data.DataColumn columnCommentText;
            
            private System.Data.DataColumn columnCommentDateSubmitted;
            
            private System.Data.DataColumn columnCommentAlbumID;
            
            private System.Data.DataColumn columnCommentPictureID;
            
            private System.Data.DataColumn columnInvitationID;
            
            private System.Data.DataColumn columnExpr1;
            
            private System.Data.DataColumn columnMessage;
            
            private System.Data.DataColumn columnCreateDate;
            
            private System.Data.DataColumn columnExpr2;
            
            private System.Data.DataColumn columnContactID;
            
            private System.Data.DataColumn columnGuid;
            
            private System.Data.DataColumn columnIsRead;
            
            private System.Data.DataColumn columnExpr3;
            
            private System.Data.DataColumn columnFirstName;
            
            private System.Data.DataColumn columnMiddleName;
            
            private System.Data.DataColumn columnLastName;
            
            private System.Data.DataColumn columnNickName;
            
            private System.Data.DataColumn columnEmailAddress;
            
            private System.Data.DataColumn columnHomePhone;
            
            private System.Data.DataColumn columnWorkPhone;
            
            private System.Data.DataColumn columnMobilePhone;
            
            private System.Data.DataColumn columnAddress1;
            
            private System.Data.DataColumn columnAddress2;
            
            private System.Data.DataColumn columnCity;
            
            private System.Data.DataColumn columnState;
            
            private System.Data.DataColumn columnZip;
            
            private System.Data.DataColumn columnWebsiteURL;
            
            private System.Data.DataColumn columnPictureID;
            
            private System.Data.DataColumn columnPictureTitle;
            
            private System.Data.DataColumn columnPictureCaption;
            
            private System.Data.DataColumn columnPictureCreateDate;
            
            private System.Data.DataColumn columnPictureFileName;
            
            private System.Data.DataColumn columnPictureHighlight;
            
            private System.Data.DataColumn columnPictureAlbumID;
            
            private System.Data.DataColumn columnPictureViewCount;
            
            private System.Data.DataColumn columnPictureHeight;
            
            private System.Data.DataColumn columnPictureWidth;
            
            private System.Data.DataColumn columnExpr4;
            
            private System.Data.DataColumn columnrating1;
            
            private System.Data.DataColumn columnrating2;
            
            private System.Data.DataColumn columnrating3;
            
            private System.Data.DataColumn columnrating4;
            
            private System.Data.DataColumn columnrating5;
            
            private System.Data.DataColumn columnName;
            
            private System.Data.DataColumn columnValue;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllDataDataTable() {
                this.TableName = "AllData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AllDataDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AllDataDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AlbumIDColumn {
                get {
                    return this.columnAlbumID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AlbumNameColumn {
                get {
                    return this.columnAlbumName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AlbumDescColumn {
                get {
                    return this.columnAlbumDesc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AlbumCreateDateColumn {
                get {
                    return this.columnAlbumCreateDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ParentAlbumIDColumn {
                get {
                    return this.columnParentAlbumID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentIDColumn {
                get {
                    return this.columnCommentID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentFromNameColumn {
                get {
                    return this.columnCommentFromName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentFromEmailAddrColumn {
                get {
                    return this.columnCommentFromEmailAddr;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentFromWebURLColumn {
                get {
                    return this.columnCommentFromWebURL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentTextColumn {
                get {
                    return this.columnCommentText;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentDateSubmittedColumn {
                get {
                    return this.columnCommentDateSubmitted;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentAlbumIDColumn {
                get {
                    return this.columnCommentAlbumID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CommentPictureIDColumn {
                get {
                    return this.columnCommentPictureID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InvitationIDColumn {
                get {
                    return this.columnInvitationID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Expr1Column {
                get {
                    return this.columnExpr1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MessageColumn {
                get {
                    return this.columnMessage;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CreateDateColumn {
                get {
                    return this.columnCreateDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Expr2Column {
                get {
                    return this.columnExpr2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ContactIDColumn {
                get {
                    return this.columnContactID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GuidColumn {
                get {
                    return this.columnGuid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IsReadColumn {
                get {
                    return this.columnIsRead;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Expr3Column {
                get {
                    return this.columnExpr3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MiddleNameColumn {
                get {
                    return this.columnMiddleName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NickNameColumn {
                get {
                    return this.columnNickName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EmailAddressColumn {
                get {
                    return this.columnEmailAddress;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HomePhoneColumn {
                get {
                    return this.columnHomePhone;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WorkPhoneColumn {
                get {
                    return this.columnWorkPhone;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MobilePhoneColumn {
                get {
                    return this.columnMobilePhone;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WebsiteURLColumn {
                get {
                    return this.columnWebsiteURL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PictureIDColumn {
                get {
                    return this.columnPictureID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PictureTitleColumn {
                get {
                    return this.columnPictureTitle;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PictureCaptionColumn {
                get {
                    return this.columnPictureCaption;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PictureCreateDateColumn {
                get {
                    return this.columnPictureCreateDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PictureFileNameColumn {
                get {
                    return this.columnPictureFileName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PictureHighlightColumn {
                get {
                    return this.columnPictureHighlight;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PictureAlbumIDColumn {
                get {
                    return this.columnPictureAlbumID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PictureViewCountColumn {
                get {
                    return this.columnPictureViewCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PictureHeightColumn {
                get {
                    return this.columnPictureHeight;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PictureWidthColumn {
                get {
                    return this.columnPictureWidth;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Expr4Column {
                get {
                    return this.columnExpr4;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rating1Column {
                get {
                    return this.columnrating1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rating2Column {
                get {
                    return this.columnrating2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rating3Column {
                get {
                    return this.columnrating3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rating4Column {
                get {
                    return this.columnrating4;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rating5Column {
                get {
                    return this.columnrating5;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ValueColumn {
                get {
                    return this.columnValue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllDataRow this[int index] {
                get {
                    return ((AllDataRow)(this.Rows[index]));
                }
            }
            
            public event AllDataRowChangeEventHandler AllDataRowChanging;
            
            public event AllDataRowChangeEventHandler AllDataRowChanged;
            
            public event AllDataRowChangeEventHandler AllDataRowDeleting;
            
            public event AllDataRowChangeEventHandler AllDataRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAllDataRow(AllDataRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllDataRow AddAllDataRow(
                        int AlbumID, 
                        string AlbumName, 
                        string AlbumDesc, 
                        System.DateTime AlbumCreateDate, 
                        int ParentAlbumID, 
                        int CommentID, 
                        string CommentFromName, 
                        string CommentFromEmailAddr, 
                        string CommentFromWebURL, 
                        string CommentText, 
                        System.DateTime CommentDateSubmitted, 
                        int CommentAlbumID, 
                        int CommentPictureID, 
                        int InvitationID, 
                        int Expr1, 
                        string Message, 
                        System.DateTime CreateDate, 
                        int Expr2, 
                        int ContactID, 
                        string Guid, 
                        bool IsRead, 
                        int Expr3, 
                        string FirstName, 
                        string MiddleName, 
                        string LastName, 
                        string NickName, 
                        string EmailAddress, 
                        string HomePhone, 
                        string WorkPhone, 
                        string MobilePhone, 
                        string Address1, 
                        string Address2, 
                        string City, 
                        string State, 
                        string Zip, 
                        string WebsiteURL, 
                        int PictureID, 
                        string PictureTitle, 
                        string PictureCaption, 
                        System.DateTime PictureCreateDate, 
                        string PictureFileName, 
                        bool PictureHighlight, 
                        int PictureAlbumID, 
                        int PictureViewCount, 
                        int PictureHeight, 
                        int PictureWidth, 
                        int Expr4, 
                        int rating1, 
                        int rating2, 
                        int rating3, 
                        int rating4, 
                        int rating5, 
                        string Name, 
                        string Value) {
                AllDataRow rowAllDataRow = ((AllDataRow)(this.NewRow()));
                rowAllDataRow.ItemArray = new object[] {
                        AlbumID,
                        AlbumName,
                        AlbumDesc,
                        AlbumCreateDate,
                        ParentAlbumID,
                        CommentID,
                        CommentFromName,
                        CommentFromEmailAddr,
                        CommentFromWebURL,
                        CommentText,
                        CommentDateSubmitted,
                        CommentAlbumID,
                        CommentPictureID,
                        InvitationID,
                        Expr1,
                        Message,
                        CreateDate,
                        Expr2,
                        ContactID,
                        Guid,
                        IsRead,
                        Expr3,
                        FirstName,
                        MiddleName,
                        LastName,
                        NickName,
                        EmailAddress,
                        HomePhone,
                        WorkPhone,
                        MobilePhone,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        WebsiteURL,
                        PictureID,
                        PictureTitle,
                        PictureCaption,
                        PictureCreateDate,
                        PictureFileName,
                        PictureHighlight,
                        PictureAlbumID,
                        PictureViewCount,
                        PictureHeight,
                        PictureWidth,
                        Expr4,
                        rating1,
                        rating2,
                        rating3,
                        rating4,
                        rating5,
                        Name,
                        Value};
                this.Rows.Add(rowAllDataRow);
                return rowAllDataRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllDataRow FindByAlbumIDCommentIDCommentAlbumIDCommentPictureIDInvitationIDExpr2ContactIDExpr3PictureIDPictureAlbumIDExpr4Name(int AlbumID, int CommentID, int CommentAlbumID, int CommentPictureID, int InvitationID, int Expr2, int ContactID, int Expr3, int PictureID, int PictureAlbumID, int Expr4, string Name) {
                return ((AllDataRow)(this.Rows.Find(new object[] {
                            AlbumID,
                            CommentID,
                            CommentAlbumID,
                            CommentPictureID,
                            InvitationID,
                            Expr2,
                            ContactID,
                            Expr3,
                            PictureID,
                            PictureAlbumID,
                            Expr4,
                            Name})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                AllDataDataTable cln = ((AllDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new AllDataDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAlbumID = base.Columns["AlbumID"];
                this.columnAlbumName = base.Columns["AlbumName"];
                this.columnAlbumDesc = base.Columns["AlbumDesc"];
                this.columnAlbumCreateDate = base.Columns["AlbumCreateDate"];
                this.columnParentAlbumID = base.Columns["ParentAlbumID"];
                this.columnCommentID = base.Columns["CommentID"];
                this.columnCommentFromName = base.Columns["CommentFromName"];
                this.columnCommentFromEmailAddr = base.Columns["CommentFromEmailAddr"];
                this.columnCommentFromWebURL = base.Columns["CommentFromWebURL"];
                this.columnCommentText = base.Columns["CommentText"];
                this.columnCommentDateSubmitted = base.Columns["CommentDateSubmitted"];
                this.columnCommentAlbumID = base.Columns["CommentAlbumID"];
                this.columnCommentPictureID = base.Columns["CommentPictureID"];
                this.columnInvitationID = base.Columns["InvitationID"];
                this.columnExpr1 = base.Columns["Expr1"];
                this.columnMessage = base.Columns["Message"];
                this.columnCreateDate = base.Columns["CreateDate"];
                this.columnExpr2 = base.Columns["Expr2"];
                this.columnContactID = base.Columns["ContactID"];
                this.columnGuid = base.Columns["Guid"];
                this.columnIsRead = base.Columns["IsRead"];
                this.columnExpr3 = base.Columns["Expr3"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnMiddleName = base.Columns["MiddleName"];
                this.columnLastName = base.Columns["LastName"];
                this.columnNickName = base.Columns["NickName"];
                this.columnEmailAddress = base.Columns["EmailAddress"];
                this.columnHomePhone = base.Columns["HomePhone"];
                this.columnWorkPhone = base.Columns["WorkPhone"];
                this.columnMobilePhone = base.Columns["MobilePhone"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnZip = base.Columns["Zip"];
                this.columnWebsiteURL = base.Columns["WebsiteURL"];
                this.columnPictureID = base.Columns["PictureID"];
                this.columnPictureTitle = base.Columns["PictureTitle"];
                this.columnPictureCaption = base.Columns["PictureCaption"];
                this.columnPictureCreateDate = base.Columns["PictureCreateDate"];
                this.columnPictureFileName = base.Columns["PictureFileName"];
                this.columnPictureHighlight = base.Columns["PictureHighlight"];
                this.columnPictureAlbumID = base.Columns["PictureAlbumID"];
                this.columnPictureViewCount = base.Columns["PictureViewCount"];
                this.columnPictureHeight = base.Columns["PictureHeight"];
                this.columnPictureWidth = base.Columns["PictureWidth"];
                this.columnExpr4 = base.Columns["Expr4"];
                this.columnrating1 = base.Columns["rating1"];
                this.columnrating2 = base.Columns["rating2"];
                this.columnrating3 = base.Columns["rating3"];
                this.columnrating4 = base.Columns["rating4"];
                this.columnrating5 = base.Columns["rating5"];
                this.columnName = base.Columns["Name"];
                this.columnValue = base.Columns["Value"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAlbumID = new System.Data.DataColumn("AlbumID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlbumID);
                this.columnAlbumName = new System.Data.DataColumn("AlbumName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlbumName);
                this.columnAlbumDesc = new System.Data.DataColumn("AlbumDesc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlbumDesc);
                this.columnAlbumCreateDate = new System.Data.DataColumn("AlbumCreateDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlbumCreateDate);
                this.columnParentAlbumID = new System.Data.DataColumn("ParentAlbumID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentAlbumID);
                this.columnCommentID = new System.Data.DataColumn("CommentID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentID);
                this.columnCommentFromName = new System.Data.DataColumn("CommentFromName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentFromName);
                this.columnCommentFromEmailAddr = new System.Data.DataColumn("CommentFromEmailAddr", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentFromEmailAddr);
                this.columnCommentFromWebURL = new System.Data.DataColumn("CommentFromWebURL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentFromWebURL);
                this.columnCommentText = new System.Data.DataColumn("CommentText", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentText);
                this.columnCommentDateSubmitted = new System.Data.DataColumn("CommentDateSubmitted", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentDateSubmitted);
                this.columnCommentAlbumID = new System.Data.DataColumn("CommentAlbumID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentAlbumID);
                this.columnCommentPictureID = new System.Data.DataColumn("CommentPictureID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommentPictureID);
                this.columnInvitationID = new System.Data.DataColumn("InvitationID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvitationID);
                this.columnExpr1 = new System.Data.DataColumn("Expr1", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr1);
                this.columnMessage = new System.Data.DataColumn("Message", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessage);
                this.columnCreateDate = new System.Data.DataColumn("CreateDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDate);
                this.columnExpr2 = new System.Data.DataColumn("Expr2", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr2);
                this.columnContactID = new System.Data.DataColumn("ContactID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactID);
                this.columnGuid = new System.Data.DataColumn("Guid", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuid);
                this.columnIsRead = new System.Data.DataColumn("IsRead", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRead);
                this.columnExpr3 = new System.Data.DataColumn("Expr3", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr3);
                this.columnFirstName = new System.Data.DataColumn("FirstName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnMiddleName = new System.Data.DataColumn("MiddleName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiddleName);
                this.columnLastName = new System.Data.DataColumn("LastName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnNickName = new System.Data.DataColumn("NickName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNickName);
                this.columnEmailAddress = new System.Data.DataColumn("EmailAddress", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmailAddress);
                this.columnHomePhone = new System.Data.DataColumn("HomePhone", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHomePhone);
                this.columnWorkPhone = new System.Data.DataColumn("WorkPhone", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkPhone);
                this.columnMobilePhone = new System.Data.DataColumn("MobilePhone", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobilePhone);
                this.columnAddress1 = new System.Data.DataColumn("Address1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new System.Data.DataColumn("Address2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCity = new System.Data.DataColumn("City", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new System.Data.DataColumn("State", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnZip = new System.Data.DataColumn("Zip", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnWebsiteURL = new System.Data.DataColumn("WebsiteURL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebsiteURL);
                this.columnPictureID = new System.Data.DataColumn("PictureID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPictureID);
                this.columnPictureTitle = new System.Data.DataColumn("PictureTitle", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPictureTitle);
                this.columnPictureCaption = new System.Data.DataColumn("PictureCaption", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPictureCaption);
                this.columnPictureCreateDate = new System.Data.DataColumn("PictureCreateDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPictureCreateDate);
                this.columnPictureFileName = new System.Data.DataColumn("PictureFileName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPictureFileName);
                this.columnPictureHighlight = new System.Data.DataColumn("PictureHighlight", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPictureHighlight);
                this.columnPictureAlbumID = new System.Data.DataColumn("PictureAlbumID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPictureAlbumID);
                this.columnPictureViewCount = new System.Data.DataColumn("PictureViewCount", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPictureViewCount);
                this.columnPictureHeight = new System.Data.DataColumn("PictureHeight", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPictureHeight);
                this.columnPictureWidth = new System.Data.DataColumn("PictureWidth", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPictureWidth);
                this.columnExpr4 = new System.Data.DataColumn("Expr4", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr4);
                this.columnrating1 = new System.Data.DataColumn("rating1", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrating1);
                this.columnrating2 = new System.Data.DataColumn("rating2", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrating2);
                this.columnrating3 = new System.Data.DataColumn("rating3", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrating3);
                this.columnrating4 = new System.Data.DataColumn("rating4", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrating4);
                this.columnrating5 = new System.Data.DataColumn("rating5", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrating5);
                this.columnName = new System.Data.DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnValue = new System.Data.DataColumn("Value", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnAlbumID,
                                this.columnCommentID,
                                this.columnCommentAlbumID,
                                this.columnCommentPictureID,
                                this.columnInvitationID,
                                this.columnExpr2,
                                this.columnContactID,
                                this.columnExpr3,
                                this.columnPictureID,
                                this.columnPictureAlbumID,
                                this.columnExpr4,
                                this.columnName}, true));
                this.columnAlbumID.AllowDBNull = false;
                this.columnAlbumName.MaxLength = 50;
                this.columnAlbumDesc.MaxLength = 2500;
                this.columnParentAlbumID.AllowDBNull = false;
                this.columnCommentID.AllowDBNull = false;
                this.columnCommentFromName.MaxLength = 50;
                this.columnCommentFromEmailAddr.MaxLength = 50;
                this.columnCommentFromWebURL.MaxLength = 50;
                this.columnCommentText.MaxLength = 1000;
                this.columnCommentAlbumID.AllowDBNull = false;
                this.columnCommentPictureID.AllowDBNull = false;
                this.columnInvitationID.AllowDBNull = false;
                this.columnExpr1.AllowDBNull = false;
                this.columnMessage.AllowDBNull = false;
                this.columnMessage.MaxLength = 2147483647;
                this.columnCreateDate.AllowDBNull = false;
                this.columnExpr2.AllowDBNull = false;
                this.columnContactID.AllowDBNull = false;
                this.columnGuid.AllowDBNull = false;
                this.columnGuid.MaxLength = 40;
                this.columnIsRead.AllowDBNull = false;
                this.columnExpr3.AllowDBNull = false;
                this.columnFirstName.AllowDBNull = false;
                this.columnFirstName.MaxLength = 25;
                this.columnMiddleName.AllowDBNull = false;
                this.columnMiddleName.MaxLength = 25;
                this.columnLastName.AllowDBNull = false;
                this.columnLastName.MaxLength = 25;
                this.columnNickName.AllowDBNull = false;
                this.columnNickName.MaxLength = 25;
                this.columnEmailAddress.AllowDBNull = false;
                this.columnEmailAddress.MaxLength = 50;
                this.columnHomePhone.AllowDBNull = false;
                this.columnHomePhone.MaxLength = 20;
                this.columnWorkPhone.AllowDBNull = false;
                this.columnWorkPhone.MaxLength = 20;
                this.columnMobilePhone.AllowDBNull = false;
                this.columnMobilePhone.MaxLength = 20;
                this.columnAddress1.AllowDBNull = false;
                this.columnAddress1.MaxLength = 50;
                this.columnAddress2.AllowDBNull = false;
                this.columnAddress2.MaxLength = 50;
                this.columnCity.AllowDBNull = false;
                this.columnCity.MaxLength = 50;
                this.columnState.AllowDBNull = false;
                this.columnState.MaxLength = 50;
                this.columnZip.AllowDBNull = false;
                this.columnZip.MaxLength = 10;
                this.columnWebsiteURL.AllowDBNull = false;
                this.columnWebsiteURL.MaxLength = 100;
                this.columnPictureID.AllowDBNull = false;
                this.columnPictureTitle.MaxLength = 50;
                this.columnPictureCaption.MaxLength = 2500;
                this.columnPictureFileName.MaxLength = 1000;
                this.columnPictureAlbumID.AllowDBNull = false;
                this.columnPictureViewCount.AllowDBNull = false;
                this.columnExpr4.AllowDBNull = false;
                this.columnrating1.AllowDBNull = false;
                this.columnrating2.AllowDBNull = false;
                this.columnrating3.AllowDBNull = false;
                this.columnrating4.AllowDBNull = false;
                this.columnrating5.AllowDBNull = false;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 50;
                this.columnValue.AllowDBNull = false;
                this.columnValue.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllDataRow NewAllDataRow() {
                return ((AllDataRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new AllDataRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(AllDataRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AllDataRowChanged != null)) {
                    this.AllDataRowChanged(this, new AllDataRowChangeEvent(((AllDataRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AllDataRowChanging != null)) {
                    this.AllDataRowChanging(this, new AllDataRowChangeEvent(((AllDataRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AllDataRowDeleted != null)) {
                    this.AllDataRowDeleted(this, new AllDataRowChangeEvent(((AllDataRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AllDataRowDeleting != null)) {
                    this.AllDataRowDeleting(this, new AllDataRowChangeEvent(((AllDataRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAllDataRow(AllDataRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                nGalleryDataSet ds = new nGalleryDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AllDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AllDataRow : System.Data.DataRow {
            
            private AllDataDataTable tableAllData;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AllDataRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAllData = ((AllDataDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AlbumID {
                get {
                    return ((int)(this[this.tableAllData.AlbumIDColumn]));
                }
                set {
                    this[this.tableAllData.AlbumIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AlbumName {
                get {
                    try {
                        return ((string)(this[this.tableAllData.AlbumNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AlbumName\' in table \'AllData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllData.AlbumNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AlbumDesc {
                get {
                    try {
                        return ((string)(this[this.tableAllData.AlbumDescColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AlbumDesc\' in table \'AllData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllData.AlbumDescColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AlbumCreateDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAllData.AlbumCreateDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AlbumCreateDate\' in table \'AllData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllData.AlbumCreateDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ParentAlbumID {
                get {
                    return ((int)(this[this.tableAllData.ParentAlbumIDColumn]));
                }
                set {
                    this[this.tableAllData.ParentAlbumIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CommentID {
                get {
                    return ((int)(this[this.tableAllData.CommentIDColumn]));
                }
                set {
                    this[this.tableAllData.CommentIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CommentFromName {
                get {
                    try {
                        return ((string)(this[this.tableAllData.CommentFromNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CommentFromName\' in table \'AllData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllData.CommentFromNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CommentFromEmailAddr {
                get {
                    try {
                        return ((string)(this[this.tableAllData.CommentFromEmailAddrColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CommentFromEmailAddr\' in table \'AllData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllData.CommentFromEmailAddrColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CommentFromWebURL {
                get {
                    try {
                        return ((string)(this[this.tableAllData.CommentFromWebURLColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CommentFromWebURL\' in table \'AllData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllData.CommentFromWebURLColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CommentText {
                get {
                    try {
                        return ((string)(this[this.tableAllData.CommentTextColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CommentText\' in table \'AllData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllData.CommentTextColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CommentDateSubmitted {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAllData.CommentDateSubmittedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CommentDateSubmitted\' in table \'AllData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllData.CommentDateSubmittedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CommentAlbumID {
                get {
                    return ((int)(this[this.tableAllData.CommentAlbumIDColumn]));
                }
                set {
                    this[this.tableAllData.CommentAlbumIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CommentPictureID {
                get {
                    return ((int)(this[this.tableAllData.CommentPictureIDColumn]));
                }
                set {
                    this[this.tableAllData.CommentPictureIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InvitationID {
                get {
                    return ((int)(this[this.tableAllData.InvitationIDColumn]));
                }
                set {
                    this[this.tableAllData.InvitationIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Expr1 {
                get {
                    return ((int)(this[this.tableAllData.Expr1Column]));
                }
                set {
                    this[this.tableAllData.Expr1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Message {
                get {
                    return ((string)(this[this.tableAllData.MessageColumn]));
                }
                set {
                    this[this.tableAllData.MessageColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreateDate {
                get {
                    return ((System.DateTime)(this[this.tableAllData.CreateDateColumn]));
                }
                set {
                    this[this.tableAllData.CreateDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Expr2 {
                get {
                    return ((int)(this[this.tableAllData.Expr2Column]));
                }
                set {
                    this[this.tableAllData.Expr2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContactID {
                get {
                    return ((int)(this[this.tableAllData.ContactIDColumn]));
                }
                set {
                    this[this.tableAllData.ContactIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Guid {
                get {
                    return ((string)(this[this.tableAllData.GuidColumn]));
                }
                set {
                    this[this.tableAllData.GuidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRead {
                get {
                    return ((bool)(this[this.tableAllData.IsReadColumn]));
                }
                set {
                    this[this.tableAllData.IsReadColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Expr3 {
                get {
                    return ((int)(this[this.tableAllData.Expr3Column]));
                }
                set {
                    this[this.tableAllData.Expr3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    return ((string)(this[this.tableAllData.FirstNameColumn]));
                }
                set {
                    this[this.tableAllData.FirstNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MiddleName {
                get {
                    return ((string)(this[this.tableAllData.MiddleNameColumn]));
                }
                set {
                    this[this.tableAllData.MiddleNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastName {
                get {
                    return ((string)(this[this.tableAllData.LastNameColumn]));
                }
                set {
                    this[this.tableAllData.LastNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NickName {
                get {
                    return ((string)(this[this.tableAllData.NickNameColumn]));
                }
                set {
                    this[this.tableAllData.NickNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmailAddress {
                get {
                    return ((string)(this[this.tableAllData.EmailAddressColumn]));
                }
                set {
                    this[this.tableAllData.EmailAddressColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HomePhone {
                get {
                    return ((string)(this[this.tableAllData.HomePhoneColumn]));
                }
                set {
                    this[this.tableAllData.HomePhoneColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WorkPhone {
                get {
                    return ((string)(this[this.tableAllData.WorkPhoneColumn]));
                }
                set {
                    this[this.tableAllData.WorkPhoneColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MobilePhone {
                get {
                    return ((string)(this[this.tableAllData.MobilePhoneColumn]));
                }
                set {
                    this[this.tableAllData.MobilePhoneColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    return ((string)(this[this.tableAllData.Address1Column]));
                }
                set {
                    this[this.tableAllData.Address1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    return ((string)(this[this.tableAllData.Address2Column]));
                }
                set {
                    this[this.tableAllData.Address2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    return ((string)(this[this.tableAllData.CityColumn]));
                }
                set {
                    this[this.tableAllData.CityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    return ((string)(this[this.tableAllData.StateColumn]));
                }
                set {
                    this[this.tableAllData.StateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zip {
                get {
                    return ((string)(this[this.tableAllData.ZipColumn]));
                }
                set {
                    this[this.tableAllData.ZipColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WebsiteURL {
                get {
                    return ((string)(this[this.tableAllData.WebsiteURLColumn]));
                }
                set {
                    this[this.tableAllData.WebsiteURLColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PictureID {
                get {
                    return ((int)(this[this.tableAllData.PictureIDColumn]));
                }
                set {
                    this[this.tableAllData.PictureIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PictureTitle {
                get {
                    try {
                        return ((string)(this[this.tableAllData.PictureTitleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PictureTitle\' in table \'AllData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllData.PictureTitleColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PictureCaption {
                get {
                    try {
                        return ((string)(this[this.tableAllData.PictureCaptionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PictureCaption\' in table \'AllData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllData.PictureCaptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PictureCreateDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAllData.PictureCreateDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PictureCreateDate\' in table \'AllData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllData.PictureCreateDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PictureFileName {
                get {
                    try {
                        return ((string)(this[this.tableAllData.PictureFileNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PictureFileName\' in table \'AllData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllData.PictureFileNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PictureHighlight {
                get {
                    try {
                        return ((bool)(this[this.tableAllData.PictureHighlightColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PictureHighlight\' in table \'AllData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllData.PictureHighlightColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PictureAlbumID {
                get {
                    return ((int)(this[this.tableAllData.PictureAlbumIDColumn]));
                }
                set {
                    this[this.tableAllData.PictureAlbumIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PictureViewCount {
                get {
                    return ((int)(this[this.tableAllData.PictureViewCountColumn]));
                }
                set {
                    this[this.tableAllData.PictureViewCountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PictureHeight {
                get {
                    try {
                        return ((int)(this[this.tableAllData.PictureHeightColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PictureHeight\' in table \'AllData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllData.PictureHeightColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PictureWidth {
                get {
                    try {
                        return ((int)(this[this.tableAllData.PictureWidthColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PictureWidth\' in table \'AllData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllData.PictureWidthColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Expr4 {
                get {
                    return ((int)(this[this.tableAllData.Expr4Column]));
                }
                set {
                    this[this.tableAllData.Expr4Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int rating1 {
                get {
                    return ((int)(this[this.tableAllData.rating1Column]));
                }
                set {
                    this[this.tableAllData.rating1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int rating2 {
                get {
                    return ((int)(this[this.tableAllData.rating2Column]));
                }
                set {
                    this[this.tableAllData.rating2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int rating3 {
                get {
                    return ((int)(this[this.tableAllData.rating3Column]));
                }
                set {
                    this[this.tableAllData.rating3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int rating4 {
                get {
                    return ((int)(this[this.tableAllData.rating4Column]));
                }
                set {
                    this[this.tableAllData.rating4Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int rating5 {
                get {
                    return ((int)(this[this.tableAllData.rating5Column]));
                }
                set {
                    this[this.tableAllData.rating5Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    return ((string)(this[this.tableAllData.NameColumn]));
                }
                set {
                    this[this.tableAllData.NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Value {
                get {
                    return ((string)(this[this.tableAllData.ValueColumn]));
                }
                set {
                    this[this.tableAllData.ValueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlbumNameNull() {
                return this.IsNull(this.tableAllData.AlbumNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlbumNameNull() {
                this[this.tableAllData.AlbumNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlbumDescNull() {
                return this.IsNull(this.tableAllData.AlbumDescColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlbumDescNull() {
                this[this.tableAllData.AlbumDescColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlbumCreateDateNull() {
                return this.IsNull(this.tableAllData.AlbumCreateDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlbumCreateDateNull() {
                this[this.tableAllData.AlbumCreateDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentFromNameNull() {
                return this.IsNull(this.tableAllData.CommentFromNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentFromNameNull() {
                this[this.tableAllData.CommentFromNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentFromEmailAddrNull() {
                return this.IsNull(this.tableAllData.CommentFromEmailAddrColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentFromEmailAddrNull() {
                this[this.tableAllData.CommentFromEmailAddrColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentFromWebURLNull() {
                return this.IsNull(this.tableAllData.CommentFromWebURLColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentFromWebURLNull() {
                this[this.tableAllData.CommentFromWebURLColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentTextNull() {
                return this.IsNull(this.tableAllData.CommentTextColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentTextNull() {
                this[this.tableAllData.CommentTextColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentDateSubmittedNull() {
                return this.IsNull(this.tableAllData.CommentDateSubmittedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentDateSubmittedNull() {
                this[this.tableAllData.CommentDateSubmittedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPictureTitleNull() {
                return this.IsNull(this.tableAllData.PictureTitleColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPictureTitleNull() {
                this[this.tableAllData.PictureTitleColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPictureCaptionNull() {
                return this.IsNull(this.tableAllData.PictureCaptionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPictureCaptionNull() {
                this[this.tableAllData.PictureCaptionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPictureCreateDateNull() {
                return this.IsNull(this.tableAllData.PictureCreateDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPictureCreateDateNull() {
                this[this.tableAllData.PictureCreateDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPictureFileNameNull() {
                return this.IsNull(this.tableAllData.PictureFileNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPictureFileNameNull() {
                this[this.tableAllData.PictureFileNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPictureHighlightNull() {
                return this.IsNull(this.tableAllData.PictureHighlightColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPictureHighlightNull() {
                this[this.tableAllData.PictureHighlightColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPictureHeightNull() {
                return this.IsNull(this.tableAllData.PictureHeightColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPictureHeightNull() {
                this[this.tableAllData.PictureHeightColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPictureWidthNull() {
                return this.IsNull(this.tableAllData.PictureWidthColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPictureWidthNull() {
                this[this.tableAllData.PictureWidthColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AllDataRowChangeEvent : System.EventArgs {
            
            private AllDataRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllDataRowChangeEvent(AllDataRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace nGallerySQLConnectionTesting.nGalleryDataSetTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AllDataTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AllDataTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AllData";
            tableMapping.ColumnMappings.Add("AlbumID", "AlbumID");
            tableMapping.ColumnMappings.Add("AlbumName", "AlbumName");
            tableMapping.ColumnMappings.Add("AlbumDesc", "AlbumDesc");
            tableMapping.ColumnMappings.Add("AlbumCreateDate", "AlbumCreateDate");
            tableMapping.ColumnMappings.Add("ParentAlbumID", "ParentAlbumID");
            tableMapping.ColumnMappings.Add("CommentID", "CommentID");
            tableMapping.ColumnMappings.Add("CommentFromName", "CommentFromName");
            tableMapping.ColumnMappings.Add("CommentFromEmailAddr", "CommentFromEmailAddr");
            tableMapping.ColumnMappings.Add("CommentFromWebURL", "CommentFromWebURL");
            tableMapping.ColumnMappings.Add("CommentText", "CommentText");
            tableMapping.ColumnMappings.Add("CommentDateSubmitted", "CommentDateSubmitted");
            tableMapping.ColumnMappings.Add("CommentAlbumID", "CommentAlbumID");
            tableMapping.ColumnMappings.Add("CommentPictureID", "CommentPictureID");
            tableMapping.ColumnMappings.Add("InvitationID", "InvitationID");
            tableMapping.ColumnMappings.Add("Expr1", "Expr1");
            tableMapping.ColumnMappings.Add("Message", "Message");
            tableMapping.ColumnMappings.Add("CreateDate", "CreateDate");
            tableMapping.ColumnMappings.Add("Expr2", "Expr2");
            tableMapping.ColumnMappings.Add("ContactID", "ContactID");
            tableMapping.ColumnMappings.Add("Guid", "Guid");
            tableMapping.ColumnMappings.Add("IsRead", "IsRead");
            tableMapping.ColumnMappings.Add("Expr3", "Expr3");
            tableMapping.ColumnMappings.Add("FirstName", "FirstName");
            tableMapping.ColumnMappings.Add("MiddleName", "MiddleName");
            tableMapping.ColumnMappings.Add("LastName", "LastName");
            tableMapping.ColumnMappings.Add("NickName", "NickName");
            tableMapping.ColumnMappings.Add("EmailAddress", "EmailAddress");
            tableMapping.ColumnMappings.Add("HomePhone", "HomePhone");
            tableMapping.ColumnMappings.Add("WorkPhone", "WorkPhone");
            tableMapping.ColumnMappings.Add("MobilePhone", "MobilePhone");
            tableMapping.ColumnMappings.Add("Address1", "Address1");
            tableMapping.ColumnMappings.Add("Address2", "Address2");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("State", "State");
            tableMapping.ColumnMappings.Add("Zip", "Zip");
            tableMapping.ColumnMappings.Add("WebsiteURL", "WebsiteURL");
            tableMapping.ColumnMappings.Add("PictureID", "PictureID");
            tableMapping.ColumnMappings.Add("PictureTitle", "PictureTitle");
            tableMapping.ColumnMappings.Add("PictureCaption", "PictureCaption");
            tableMapping.ColumnMappings.Add("PictureCreateDate", "PictureCreateDate");
            tableMapping.ColumnMappings.Add("PictureFileName", "PictureFileName");
            tableMapping.ColumnMappings.Add("PictureHighlight", "PictureHighlight");
            tableMapping.ColumnMappings.Add("PictureAlbumID", "PictureAlbumID");
            tableMapping.ColumnMappings.Add("PictureViewCount", "PictureViewCount");
            tableMapping.ColumnMappings.Add("PictureHeight", "PictureHeight");
            tableMapping.ColumnMappings.Add("PictureWidth", "PictureWidth");
            tableMapping.ColumnMappings.Add("Expr4", "Expr4");
            tableMapping.ColumnMappings.Add("rating1", "rating1");
            tableMapping.ColumnMappings.Add("rating2", "rating2");
            tableMapping.ColumnMappings.Add("rating3", "rating3");
            tableMapping.ColumnMappings.Add("rating4", "rating4");
            tableMapping.ColumnMappings.Add("rating5", "rating5");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Value", "Value");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::nGallerySQLConnectionTesting.Properties.Settings.Default.nGalleryConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT AlbumID, AlbumName, AlbumDesc, AlbumCreateDate, ParentAlbumID, CommentID, CommentFromName, CommentFromEmailAddr, CommentFromWebURL, CommentText, CommentDateSubmitted, CommentAlbumID, CommentPictureID, InvitationID, Expr1, Message, CreateDate, Expr2, ContactID, Guid, IsRead, Expr3, FirstName, MiddleName, LastName, NickName, EmailAddress, HomePhone, WorkPhone, MobilePhone, Address1, Address2, City, State, Zip, WebsiteURL, PictureID, PictureTitle, PictureCaption, PictureCreateDate, PictureFileName, PictureHighlight, PictureAlbumID, PictureViewCount, PictureHeight, PictureWidth, Expr4, rating1, rating2, rating3, rating4, rating5, Name, Value FROM dbo.AllData";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(nGalleryDataSet.AllDataDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual nGalleryDataSet.AllDataDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            nGalleryDataSet.AllDataDataTable dataTable = new nGalleryDataSet.AllDataDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591